version: 2
jobs:
  build_test_deploy:
    machine: true
    steps:
      - checkout

      - run: 
          name: Build docker container
          command: docker build -t "racemap/elevation-service:${CIRCLE_BUILD_NUM}" .

      - run: 
          name: Run unit tests
          command: |
            docker run \
              --rm \
              "racemap/elevation-service:${CIRCLE_BUILD_NUM}" \
              yarn test

      # - run:
      #     name: Run S3 tests
      #     command: |
      #       docker run \
      #         --rm \
      #         -d \
      #         -eTILE_SET_PATH=s3:// \
      #         -p3000:3000 \
      #         --name elevation \
      #         "racemap/elevation-service:${CIRCLE_BUILD_NUM}"
      #       sleep 5
      #       RESULT=$(curl \
      #         -d '[[51.3, 13.4], [51.4, 13.3]]' \
      #         -XPOST \
      #         -H 'Content-Type: application/json' \
      #         http://localhost:3000)
      #       [ "$RESULT" = "[101,100]" ]
      #       RESULT=$(curl http://localhost:3000/\?lat\=51.3\&lng\=13.4)
      #       [ "$RESULT" = "101" ]
      #       docker stop elevation

      - run:
          name: Run local tests
          command: |
            mkdir -p data/N51
            wget \
              http://elevation-tiles-prod.s3.amazonaws.com/skadi/N51/N51E013.hgt.gz \
              -O data/N51/N51E013.hgt.gz
            docker run \
              --rm \
              -d \
              -p3000:3000 \
              --name elevation \
              -v$(pwd)/data:/app/data \
              "racemap/elevation-service:${CIRCLE_BUILD_NUM}"
            sleep 5
            RESULT=$(curl \
              -d '[[51.3, 13.4], [51.4, 13.3]]' \
              -XPOST \
              -H 'Content-Type: application/json' \
              http://localhost:3000)
            [ "$RESULT" = "[101,100]" ]
            RESULT=$(curl http://localhost:3000/\?lat\=51.3\&lng\=13.4)
            [ "$RESULT" = "101" ]
            docker stop elevation

      - run:
          name: Push Docker images
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker tag \
              "racemap/elevation-service:${CIRCLE_BUILD_NUM}" \
              "racemap/elevation-service:${CIRCLE_BRANCH}"
            docker push "racemap/elevation-service:${CIRCLE_BUILD_NUM}"
            docker push "racemap/elevation-service:${CIRCLE_BRANCH}"
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag \
                "racemap/elevation-service:${CIRCLE_BUILD_NUM}" \
                "racemap/elevation-service:latest"
              docker push "racemap/elevation-service:latest"
            fi
            docker logout

workflows:
  version: 2
  default:
    jobs:
      - build_test_deploy
