name: Build Image

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

jobs:
  image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: racemap/elevation-service

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Test S3
        run: |
          docker run \
          --rm \
          -d \
          -eTILE_SET_PATH=s3://elevation-tiles-prod/skadi \
          -p3000:3000 \
          --name elevation \
          "racemap/elevation-service:${{ steps.meta.outputs.version }}"
          sleep 5
          RESULT=$(curl \
            -d '[[51.3, 13.4], [51.4, 13.3]]' \
            -XPOST \
            -H 'Content-Type: application/json' \
            http://localhost:3000)
          [ "$RESULT" = "[101,99]" ]
          RESULT=$(curl http://localhost:3000/\?lat\=51.3\&lng\=13.4)
          [ "$RESULT" = "101" ]
          docker stop elevation

      - name: Test Local
        run: |
          mkdir -p data/N51
          wget \
            https://elevation-tiles-prod.s3.amazonaws.com/skadi/N51/N51E013.hgt.gz \
            -O data/N51/N51E013.hgt.gz
          docker run \
            --rm \
            -d \
            -p3000:3000 \
            --name elevation \
            -v$(pwd)/data:/app/data \
            "racemap/elevation-service:${{ steps.meta.outputs.version }}"
          sleep 5
          RESULT=$(curl \
            -d '[[51.3, 13.4], [51.4, 13.3]]' \
            -XPOST \
            -H 'Content-Type: application/json' \
            http://localhost:3000)
          [ "$RESULT" = "[101,99]" ]
          RESULT=$(curl http://localhost:3000/\?lat\=51.3\&lng\=13.4)
          [ "$RESULT" = "101" ]
          docker stop elevation

      - name: Push
        uses: docker/build-push-action@v4
        if: github.event_name != 'pull_request'
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
